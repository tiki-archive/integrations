<?php

/**
 * The public-facing functionality of the plugin.
 *
 * @link       https://mytiki.com
 * @since      1.0.0
 *
 * @package    Tiki_Woo_Coupons
 * @subpackage Tiki_Woo_Coupons/public
 */

/**
 * The public-facing functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the public-facing stylesheet and JavaScript.
 *
 * @package    Tiki_Woo_Coupons
 * @subpackage Tiki_Woo_Coupons/public
 * @author     The TIKI Team <ricardo@myiki.com>
 */
class Tiki_Woo_Coupons_Public_Rest_Api {

    public function register_rest_routes(){
        register_rest_route( 'tiki/v1/woocommerce', 'coupon/create', 
            array(
                'methods'  => 'post',
                'callback' => array(
                    $this,
                    'create_coupon'
                )
            )
        );
        register_rest_route( 'tiki/v1/woocommerce', 'coupon/delete',
            array(
                'methods'  => 'post',
                'callback' => array(
                    $this,
                    'remove_coupon'
                )
            )
        );
           
    }

    /**
     * Create a Coupon Programmatically
     */
    function create_coupon( WP_REST_Request $request ){
        $current_user = wp_get_current_user();
        if($current_user->ID === 0){
            return new WP_REST_Response(array('error' => 'User not logged in.'), 400);
        }
        $tiki_user_id = get_user_meta( $current_user->ID, '_tiki_user_id', true );
        $code = substr($tiki_user_id, 0, 10);
        $coupon = new WC_Coupon($code);
        $coupon->set_email_restrictions( [$current_user->user_email] );
        $coupon->set_description( 'TIKI WooCommerce autogenerated coupon' );
        
        // discount type can be 'fixed_cart', 'percent' or 'fixed_product', defaults to 'fixed_cart'
        $coupon->set_discount_type( 'percent' );

        // discount amount
        $coupon->set_amount( 10 );

        /*
        // allow free shipping
        $coupon->set_free_shipping( true );

        // coupon expiry date
        $coupon->set_date_expires( '31-12-2022' );

        // minimum spend
        $coupon->set_minimum_amount( 1000 );

        // maximum spend
        $coupon->set_maximum_amount( 50000 );

        // individual use only
        $coupon->set_individual_use( true );

        // exclude sale items
        $coupon->set_exclude_sale_items( true );

        // products
        $coupon->set_product_ids( array( 132 ) );

        // exclude products
        $coupon->set_excluded_product_ids( array( 15, 16 ) );

        // categories
        $coupon->set_product_categories( array( 17 ) );

        // exclude categories
        $coupon->set_excluded_product_categories( array( 19, 20 ) );

        // usage limit per coupon
        $coupon->set_usage_limit( 100 );

        // limit usage to X items
        $coupon->set_limit_usage_to_x_items( 10 );
            
        // usage limit per user
        $coupon->set_usage_limit_per_user( 2 );
        */

        $coupon->save();
        return new WP_REST_Response(array('coupon' => $code), 200);
    }

    function remove_coupon(){
        $current_user = wp_get_current_user();
        if(!$current_user){
            return WP_REST_Response(array('error' => 'User not logged in.'), 400);
        }
        $tiki_user_id = get_user_meta( $current_user->ID, '_tiki_user_id', true );
        $coupon = new WC_Coupon(substr($tiki_user_id,0,10));
        if(!empty($coupon->id))
        {
            wp_delete_post($coupon->id);
        }
        return  new WP_REST_Response(array('message' => 'coupon removed'), 200);
    }
}